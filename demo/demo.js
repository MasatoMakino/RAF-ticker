(()=>{"use strict";var __webpack_modules__={318:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Demo\n\n// EXTERNAL MODULE: ./node_modules/eventemitter3/index.mjs\nvar eventemitter3 = __webpack_require__(146);\n;// CONCATENATED MODULE: ./esm/RAFTickerEvent.js\nclass RAFTickerEventContext {\n  constructor(timestamp, delta) {\n    this.timestamp = timestamp;\n    this.delta = delta;\n  }\n}\n;// CONCATENATED MODULE: ./esm/RAFTicker.js\nvar _a;\n\n\nclass RAFTicker {\n  static initialize() {\n    if (this._dispatcher == null) {\n      this._dispatcher = new eventemitter3/* default */.Z();\n    }\n    this.start();\n  }\n  static reset() {\n    this._dispatcher.removeAllListeners();\n    this.stop();\n    this.start();\n  }\n  static start() {\n    if (!RAFTicker._id) {\n      this._lastUpdateTimestamp = undefined;\n      RAFTicker.onTick(performance.now());\n    }\n  }\n  static stop() {\n    cancelAnimationFrame(RAFTicker._id);\n    this._id = undefined;\n    this._lastUpdateTimestamp = undefined;\n  }\n  static addListener(type, listener) {\n    this._dispatcher.on(type, listener);\n  }\n  /**\n   *\n   * @param type\n   * @param listener\n   */\n  static hasListener(type, listener) {\n    const listeners = this._dispatcher.listeners(type);\n    return listeners.includes(listener);\n  }\n  /**\n   * Removes the specified listener\n   *\n   * @param type\n   * @param listener\n   */\n  static removeListener(type, listener) {\n    this._dispatcher.removeListener(type, listener);\n  }\n  /**\n   * イベントを発効する。\n   * この関数はアプリケーションから利用することはなく、主に単体テストのために使用する。\n   *\n   * @param type\n   * @param event\n   */\n  static emit(type, event) {\n    this._dispatcher.emit(type, event);\n  }\n  static emitTickEvent(timestamp) {\n    if (RAFTicker._lastUpdateTimestamp == null) {\n      RAFTicker._lastUpdateTimestamp = timestamp;\n    }\n    const delta = timestamp - RAFTicker._lastUpdateTimestamp;\n    this._dispatcher.emit("onBeforeTick", new RAFTickerEventContext(timestamp, delta));\n    this._dispatcher.emit("tick", new RAFTickerEventContext(timestamp, delta));\n    this._dispatcher.emit("onAfterTick", new RAFTickerEventContext(timestamp, delta));\n    RAFTicker._lastUpdateTimestamp = timestamp;\n  }\n}\n_a = RAFTicker;\n/**\n * Alias for addListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.on = RAFTicker.addListener;\n/**\n * Alias for removeListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.off = RAFTicker.removeListener;\nRAFTicker.onTick = timestamp => {\n  _a.emitTickEvent(timestamp);\n  RAFTicker._id = requestAnimationFrame(RAFTicker.onTick);\n};\n\nRAFTicker.initialize();\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n;// CONCATENATED MODULE: ./demoSrc/demo.js\n\nclass Demo {\n  constructor() {\n    const types = ["onBeforeTick", "tick", "onAfterTick"];\n    types.forEach(type => {\n      RAFTicker.on(type, e => {\n        consoleEvent(type, e);\n      });\n    });\n  }\n}\nconst consoleEvent = (type, e) => {\n  console.log(`${type} : ${e.delta}, ${e.timestamp}`);\n};\nwindow.onload = () => {\n  const demo = new Demo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///318\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,e)=>{if(!U){var B=1/0;for(s=0;s<deferred.length;s++){for(var[U,F,e]=deferred[s],t=!0,i=0;i<U.length;i++)(!1&e||B>=e)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[i])))?U.splice(i--,1):(t=!1,e<B&&(B=e));if(t){deferred.splice(s--,1);var I=F();void 0!==I&&(Q=I)}}return Q}e=e||0;for(var s=deferred.length;s>0&&deferred[s-1][2]>e;s--)deferred[s]=deferred[s-1];deferred[s]=[U,F,e]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),(()=>{var Q={577:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var e,B,[t,i,I]=F,s=0;if(t.some((U=>0!==Q[U]))){for(e in i)__webpack_require__.o(i,e)&&(__webpack_require__.m[e]=i[e]);if(I)var c=I(__webpack_require__)}for(U&&U(F);s<t.length;s++)B=t[s],__webpack_require__.o(Q,B)&&Q[B]&&Q[B][0](),Q[B]=0;return __webpack_require__.O(c)},F=self.webpackChunk_masatomakino_raf_ticker=self.webpackChunk_masatomakino_raf_ticker||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(318)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();