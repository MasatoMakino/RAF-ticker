(()=>{"use strict";var __webpack_modules__={491:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Demo\n\n// EXTERNAL MODULE: ./node_modules/eventemitter3/index.mjs\nvar eventemitter3 = __webpack_require__(486);\n;// CONCATENATED MODULE: ./esm/RAFTickerEvent.js\nclass RAFTickerEventContext {\n  constructor(timestamp, delta) {\n    this.timestamp = timestamp;\n    this.delta = delta;\n  }\n}\n;// CONCATENATED MODULE: ./esm/RAFTicker.js\nvar _a;\n\n\nclass RAFTicker {\n  static initialize() {\n    if (this._dispatcher == null) {\n      this._dispatcher = new eventemitter3/* EventEmitter */.b();\n    }\n    this.start();\n  }\n  static reset() {\n    this._dispatcher.removeAllListeners();\n    this.stop();\n    this.start();\n  }\n  static start() {\n    if (!_a._id) {\n      this._lastUpdateTimestamp = undefined;\n      _a.onTick(performance.now());\n    }\n  }\n  static stop() {\n    cancelAnimationFrame(_a._id);\n    this._id = undefined;\n    this._lastUpdateTimestamp = undefined;\n  }\n  static addListener(type, listener) {\n    this._dispatcher.on(type, listener);\n  }\n  /**\n   *\n   * @param type\n   * @param listener\n   */\n  static hasListener(type, listener) {\n    const listeners = this._dispatcher.listeners(type);\n    return listeners.includes(listener);\n  }\n  /**\n   * Removes the specified listener\n   *\n   * @param type\n   * @param listener\n   */\n  static removeListener(type, listener) {\n    this._dispatcher.removeListener(type, listener);\n  }\n  /**\n   * イベントを発効する。\n   * この関数はアプリケーションから利用することはなく、主に単体テストのために使用する。\n   *\n   * @param type\n   * @param event\n   */\n  static emit(type, event) {\n    this._dispatcher.emit(type, event);\n  }\n  static emitTickEvent(timestamp) {\n    if (_a._lastUpdateTimestamp == null) {\n      _a._lastUpdateTimestamp = timestamp;\n    }\n    const delta = timestamp - _a._lastUpdateTimestamp;\n    this._dispatcher.emit("onBeforeTick", new RAFTickerEventContext(timestamp, delta));\n    this._dispatcher.emit("tick", new RAFTickerEventContext(timestamp, delta));\n    this._dispatcher.emit("onAfterTick", new RAFTickerEventContext(timestamp, delta));\n    _a._lastUpdateTimestamp = timestamp;\n  }\n}\n_a = RAFTicker;\n/**\n * Alias for addListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.on = _a.addListener;\n/**\n * Alias for removeListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.off = _a.removeListener;\nRAFTicker.onTick = timestamp => {\n  _a.emitTickEvent(timestamp);\n  _a._id = requestAnimationFrame(_a.onTick);\n};\nRAFTicker.initialize();\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n;// CONCATENATED MODULE: ./demoSrc/demo.js\n\nclass Demo {\n  constructor() {\n    const types = ["onBeforeTick", "tick", "onAfterTick"];\n    types.forEach(type => {\n      RAFTicker.on(type, e => {\n        consoleEvent(type, e);\n      });\n    });\n  }\n}\nconst consoleEvent = (type, e) => {\n  console.log(`${type} : ${e.delta}, ${e.timestamp}`);\n};\nwindow.onload = () => {\n  const demo = new Demo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2pDLEtBQU0sS0FBSWlDLENBQUMsQ0FBQ2xDLFNBQVUsRUFBQyxDQUFDO0FBQ3JELENBQUM7QUFFRHNDLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLE1BQU07RUFDcEIsTUFBTUMsSUFBSSxHQUFHLElBQUlULElBQUksQ0FBQyxDQUFDO0FBQ3pCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWFzYXRvbWFraW5vL3JhZi10aWNrZXIvLi9lc20vUkFGVGlja2VyRXZlbnQuanM/NmQ2NCIsIndlYnBhY2s6Ly9AbWFzYXRvbWFraW5vL3JhZi10aWNrZXIvLi9lc20vUkFGVGlja2VyLmpzPzQ3OWQiLCJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby9yYWYtdGlja2VyLy4vZXNtL2luZGV4LmpzP2IyMzkiLCJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby9yYWYtdGlja2VyLy4vZGVtb1NyYy9kZW1vLmpzPzM5OTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFJBRlRpY2tlckV2ZW50Q29udGV4dCB7XG4gICAgY29uc3RydWN0b3IodGltZXN0YW1wLCBkZWx0YSkge1xuICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IHRpbWVzdGFtcDtcbiAgICAgICAgdGhpcy5kZWx0YSA9IGRlbHRhO1xuICAgIH1cbn1cbiIsInZhciBfYTtcbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJldmVudGVtaXR0ZXIzXCI7XG5pbXBvcnQgeyBSQUZUaWNrZXJFdmVudENvbnRleHQgfSBmcm9tIFwiLi9SQUZUaWNrZXJFdmVudC5qc1wiO1xuZXhwb3J0IGNsYXNzIFJBRlRpY2tlciB7XG4gICAgc3RhdGljIGluaXRpYWxpemUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9kaXNwYXRjaGVyID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdGFydCgpO1xuICAgIH1cbiAgICBzdGF0aWMgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgICB0aGlzLnN0YXJ0KCk7XG4gICAgfVxuICAgIHN0YXRpYyBzdGFydCgpIHtcbiAgICAgICAgaWYgKCFfYS5faWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBfYS5vblRpY2socGVyZm9ybWFuY2Uubm93KCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBzdG9wKCkge1xuICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShfYS5faWQpO1xuICAgICAgICB0aGlzLl9pZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWVzdGFtcCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc3RhdGljIGFkZExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIub24odHlwZSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlXG4gICAgICogQHBhcmFtIGxpc3RlbmVyXG4gICAgICovXG4gICAgc3RhdGljIGhhc0xpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVycyA9IHRoaXMuX2Rpc3BhdGNoZXIubGlzdGVuZXJzKHR5cGUpO1xuICAgICAgICByZXR1cm4gbGlzdGVuZXJzLmluY2x1ZGVzKGxpc3RlbmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyB0aGUgc3BlY2lmaWVkIGxpc3RlbmVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZVxuICAgICAqIEBwYXJhbSBsaXN0ZW5lclxuICAgICAqL1xuICAgIHN0YXRpYyByZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLl9kaXNwYXRjaGVyLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog44Kk44OZ44Oz44OI44KS55m65Yq544GZ44KL44CCXG4gICAgICog44GT44Gu6Zai5pWw44Gv44Ki44OX44Oq44Kx44O844K344On44Oz44GL44KJ5Yip55So44GZ44KL44GT44Go44Gv44Gq44GP44CB5Li744Gr5Y2Y5L2T44OG44K544OI44Gu44Gf44KB44Gr5L2/55So44GZ44KL44CCXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZVxuICAgICAqIEBwYXJhbSBldmVudFxuICAgICAqL1xuICAgIHN0YXRpYyBlbWl0KHR5cGUsIGV2ZW50KSB7XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuZW1pdCh0eXBlLCBldmVudCk7XG4gICAgfVxuICAgIHN0YXRpYyBlbWl0VGlja0V2ZW50KHRpbWVzdGFtcCkge1xuICAgICAgICBpZiAoX2EuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPT0gbnVsbCkge1xuICAgICAgICAgICAgX2EuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPSB0aW1lc3RhbXA7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVsdGEgPSB0aW1lc3RhbXAgLSBfYS5fbGFzdFVwZGF0ZVRpbWVzdGFtcDtcbiAgICAgICAgdGhpcy5fZGlzcGF0Y2hlci5lbWl0KFwib25CZWZvcmVUaWNrXCIsIG5ldyBSQUZUaWNrZXJFdmVudENvbnRleHQodGltZXN0YW1wLCBkZWx0YSkpO1xuICAgICAgICB0aGlzLl9kaXNwYXRjaGVyLmVtaXQoXCJ0aWNrXCIsIG5ldyBSQUZUaWNrZXJFdmVudENvbnRleHQodGltZXN0YW1wLCBkZWx0YSkpO1xuICAgICAgICB0aGlzLl9kaXNwYXRjaGVyLmVtaXQoXCJvbkFmdGVyVGlja1wiLCBuZXcgUkFGVGlja2VyRXZlbnRDb250ZXh0KHRpbWVzdGFtcCwgZGVsdGEpKTtcbiAgICAgICAgX2EuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPSB0aW1lc3RhbXA7XG4gICAgfVxufVxuX2EgPSBSQUZUaWNrZXI7XG4vKipcbiAqIEFsaWFzIGZvciBhZGRMaXN0ZW5lclxuICpcbiAqIEBwYXJhbSB0eXBlXG4gKiBAcGFyYW0gbGlzdGVuZXJcbiAqL1xuUkFGVGlja2VyLm9uID0gX2EuYWRkTGlzdGVuZXI7XG4vKipcbiAqIEFsaWFzIGZvciByZW1vdmVMaXN0ZW5lclxuICpcbiAqIEBwYXJhbSB0eXBlXG4gKiBAcGFyYW0gbGlzdGVuZXJcbiAqL1xuUkFGVGlja2VyLm9mZiA9IF9hLnJlbW92ZUxpc3RlbmVyO1xuUkFGVGlja2VyLm9uVGljayA9ICh0aW1lc3RhbXApID0+IHtcbiAgICBfYS5lbWl0VGlja0V2ZW50KHRpbWVzdGFtcCk7XG4gICAgX2EuX2lkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKF9hLm9uVGljayk7XG59O1xuUkFGVGlja2VyLmluaXRpYWxpemUoKTtcbiIsImV4cG9ydCAqIGZyb20gXCIuL1JBRlRpY2tlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUkFGVGlja2VyRXZlbnQuanNcIjtcbiIsImltcG9ydCB7IFJBRlRpY2tlciB9IGZyb20gXCIuLi9lc20vaW5kZXguanNcIjtcblxuZXhwb3J0IGNsYXNzIERlbW8ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCB0eXBlcyA9IFtcIm9uQmVmb3JlVGlja1wiLCBcInRpY2tcIiwgXCJvbkFmdGVyVGlja1wiXTtcbiAgICB0eXBlcy5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gICAgICBSQUZUaWNrZXIub24odHlwZSwgKGUpID0+IHtcbiAgICAgICAgY29uc29sZUV2ZW50KHR5cGUsIGUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cblxuY29uc3QgY29uc29sZUV2ZW50ID0gKHR5cGUsIGUpID0+IHtcbiAgY29uc29sZS5sb2coYCR7dHlwZX0gOiAke2UuZGVsdGF9LCAke2UudGltZXN0YW1wfWApO1xufTtcblxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcbiAgY29uc3QgZGVtbyA9IG5ldyBEZW1vKCk7XG59O1xuIl0sIm5hbWVzIjpbIlJBRlRpY2tlckV2ZW50Q29udGV4dCIsImNvbnN0cnVjdG9yIiwidGltZXN0YW1wIiwiZGVsdGEiLCJfYSIsIkV2ZW50RW1pdHRlciIsIlJBRlRpY2tlciIsImluaXRpYWxpemUiLCJfZGlzcGF0Y2hlciIsInN0YXJ0IiwicmVzZXQiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJzdG9wIiwiX2lkIiwiX2xhc3RVcGRhdGVUaW1lc3RhbXAiLCJ1bmRlZmluZWQiLCJvblRpY2siLCJwZXJmb3JtYW5jZSIsIm5vdyIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiYWRkTGlzdGVuZXIiLCJ0eXBlIiwibGlzdGVuZXIiLCJvbiIsImhhc0xpc3RlbmVyIiwibGlzdGVuZXJzIiwiaW5jbHVkZXMiLCJyZW1vdmVMaXN0ZW5lciIsImVtaXQiLCJldmVudCIsImVtaXRUaWNrRXZlbnQiLCJvZmYiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJEZW1vIiwidHlwZXMiLCJmb3JFYWNoIiwiZSIsImNvbnNvbGVFdmVudCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJvbmxvYWQiLCJkZW1vIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///491\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(I=0;I<deferred.length;I++){for(var[U,F,B]=deferred[I],t=!0,i=0;i<U.length;i++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[i])))?U.splice(i--,1):(t=!1,B<e&&(e=B));if(t){deferred.splice(I--,1);var s=F();void 0!==s&&(Q=s)}}return Q}B=B||0;for(var I=deferred.length;I>0&&deferred[I-1][2]>B;I--)deferred[I]=deferred[I-1];deferred[I]=[U,F,B]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),(()=>{var Q={594:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[t,i,s]=F,I=0;if(t.some((U=>0!==Q[U]))){for(B in i)__webpack_require__.o(i,B)&&(__webpack_require__.m[B]=i[B]);if(s)var c=s(__webpack_require__)}for(U&&U(F);I<t.length;I++)e=t[I],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(c)},F=self.webpackChunk_masatomakino_raf_ticker=self.webpackChunk_masatomakino_raf_ticker||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(491)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();