(()=>{"use strict";var __webpack_modules__={318:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Demo\n\n// EXTERNAL MODULE: ./node_modules/eventemitter3/index.js\nvar eventemitter3 = __webpack_require__(34);\nvar eventemitter3_default = /*#__PURE__*/__webpack_require__.n(eventemitter3);\n;// CONCATENATED MODULE: ./esm/RAFTickerEvent.js\nclass RAFTickerEventContext {\n  constructor(timestamp, delta) {\n    this.timestamp = timestamp;\n    this.delta = delta;\n  }\n}\n;// CONCATENATED MODULE: ./esm/RAFTicker.js\nvar _a;\n\n\nclass RAFTicker {\n  static initialize() {\n    if (this._dispatcher == null) {\n      this._dispatcher = new (eventemitter3_default())();\n    }\n    this.start();\n  }\n  static reset() {\n    this._dispatcher.removeAllListeners();\n    this.stop();\n    this.start();\n  }\n  static start() {\n    if (!RAFTicker._id) {\n      this._lastUpdateTimestamp = undefined;\n      RAFTicker.onTick(performance.now());\n    }\n  }\n  static stop() {\n    cancelAnimationFrame(RAFTicker._id);\n    this._id = undefined;\n    this._lastUpdateTimestamp = undefined;\n  }\n  static addListener(type, listener) {\n    this._dispatcher.on(type, listener);\n  }\n  /**\n   *\n   * @param type\n   * @param listener\n   */\n  static hasListener(type, listener) {\n    const listeners = this._dispatcher.listeners(type);\n    return listeners.includes(listener);\n  }\n  /**\n   * Removes the specified listener\n   *\n   * @param type\n   * @param listener\n   */\n  static removeListener(type, listener) {\n    this._dispatcher.removeListener(type, listener);\n  }\n  /**\n   * イベントを発効する。\n   * この関数はアプリケーションから利用することはなく、主に単体テストのために使用する。\n   *\n   * @param type\n   * @param event\n   */\n  static emit(type, event) {\n    this._dispatcher.emit(type, event);\n  }\n  static emitTickEvent(timestamp) {\n    if (RAFTicker._lastUpdateTimestamp == null) {\n      RAFTicker._lastUpdateTimestamp = timestamp;\n    }\n    const delta = timestamp - RAFTicker._lastUpdateTimestamp;\n    this._dispatcher.emit("onBeforeTick", new RAFTickerEventContext(timestamp, delta));\n    this._dispatcher.emit("tick", new RAFTickerEventContext(timestamp, delta));\n    this._dispatcher.emit("onAfterTick", new RAFTickerEventContext(timestamp, delta));\n    RAFTicker._lastUpdateTimestamp = timestamp;\n  }\n}\n_a = RAFTicker;\n/**\n * Alias for addListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.on = RAFTicker.addListener;\n/**\n * Alias for removeListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.off = RAFTicker.removeListener;\nRAFTicker.onTick = timestamp => {\n  _a.emitTickEvent(timestamp);\n  RAFTicker._id = requestAnimationFrame(RAFTicker.onTick);\n};\n\nRAFTicker.initialize();\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n;// CONCATENATED MODULE: ./demoSrc/demo.js\n\nclass Demo {\n  constructor() {\n    const types = ["onBeforeTick", "tick", "onAfterTick"];\n    types.forEach(type => {\n      RAFTicker.on(type, e => {\n        consoleEvent(type, e);\n      });\n    });\n  }\n}\nconst consoleEvent = (type, e) => {\n  console.log(`${type} : ${e.delta}, ${e.timestamp}`);\n};\nwindow.onload = () => {\n  const demo = new Demo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///318\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var U=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](U,U.exports,__webpack_require__),U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,U,e)=>{if(!F){var B=1/0;for(I=0;I<deferred.length;I++){for(var[F,U,e]=deferred[I],t=!0,i=0;i<F.length;i++)(!1&e||B>=e)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[i])))?F.splice(i--,1):(t=!1,e<B&&(B=e));if(t){deferred.splice(I--,1);var s=U();void 0!==s&&(Q=s)}}return Q}e=e||0;for(var I=deferred.length;I>0&&deferred[I-1][2]>e;I--)deferred[I]=deferred[I-1];deferred[I]=[F,U,e]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),(()=>{var Q={577:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,U)=>{var e,B,[t,i,s]=U,I=0;if(t.some((F=>0!==Q[F]))){for(e in i)__webpack_require__.o(i,e)&&(__webpack_require__.m[e]=i[e]);if(s)var l=s(__webpack_require__)}for(F&&F(U);I<t.length;I++)B=t[I],__webpack_require__.o(Q,B)&&Q[B]&&Q[B][0](),Q[B]=0;return __webpack_require__.O(l)},U=self.webpackChunk_masatomakino_raf_ticker=self.webpackChunk_masatomakino_raf_ticker||[];U.forEach(F.bind(null,0)),U.push=F.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(318)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();