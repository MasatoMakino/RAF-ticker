(()=>{"use strict";var __webpack_modules__={318:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Demo\n\n// EXTERNAL MODULE: ./node_modules/eventemitter3/index.js\nvar eventemitter3 = __webpack_require__(34);\nvar eventemitter3_default = /*#__PURE__*/__webpack_require__.n(eventemitter3);\n;// CONCATENATED MODULE: ./esm/RAFTickerEvent.js\nvar RAFTickerEventType;\n(function (RAFTickerEventType) {\n  RAFTickerEventType["onBeforeTick"] = "onBeforeTick";\n  RAFTickerEventType["tick"] = "tick";\n  RAFTickerEventType["onAfterTick"] = "onAfterTick";\n})(RAFTickerEventType || (RAFTickerEventType = {}));\nclass RAFTickerEvent {\n  constructor(timestamp, delta) {\n    this.timestamp = timestamp;\n    this.delta = delta;\n  }\n}\n;// CONCATENATED MODULE: ./esm/RAFTicker.js\nvar _a;\n\n\nclass RAFTicker {\n  static initialize() {\n    if (this._dispatcher == null) {\n      this._dispatcher = new (eventemitter3_default())();\n    }\n    this.start();\n  }\n  static reset() {\n    this._dispatcher.removeAllListeners();\n    this.stop();\n    this.start();\n  }\n  static start() {\n    if (!RAFTicker._id) {\n      this._lastUpdateTimestamp = undefined;\n      RAFTicker.onTick(performance.now());\n    }\n  }\n  static stop() {\n    cancelAnimationFrame(RAFTicker._id);\n    this._id = undefined;\n    this._lastUpdateTimestamp = undefined;\n  }\n  static addListener(type, listener) {\n    this._dispatcher.on(type, listener);\n  }\n  /**\n   *\n   * @param type\n   * @param listener\n   */\n  static hasListener(type, listener) {\n    const listeners = this._dispatcher.listeners(type);\n    return listeners.includes(listener);\n  }\n  /**\n   * Removes the specified listener\n   *\n   * @param type\n   * @param listener\n   */\n  static removeListener(type, listener) {\n    this._dispatcher.removeListener(type, listener);\n  }\n  /**\n   * イベントを発効する。\n   * この関数はアプリケーションから利用することはなく、主に単体テストのために使用する。\n   *\n   * @param type\n   * @param event\n   */\n  static emit(type, event) {\n    this._dispatcher.emit(type, event);\n  }\n  static emitTickEvent(timestamp) {\n    if (RAFTicker._lastUpdateTimestamp == null) {\n      RAFTicker._lastUpdateTimestamp = timestamp;\n    }\n    const delta = timestamp - RAFTicker._lastUpdateTimestamp;\n    RAFTicker.emit(RAFTickerEventType.onBeforeTick, new RAFTickerEvent(timestamp, delta));\n    RAFTicker.emit(RAFTickerEventType.tick, new RAFTickerEvent(timestamp, delta));\n    RAFTicker.emit(RAFTickerEventType.onAfterTick, new RAFTickerEvent(timestamp, delta));\n    RAFTicker._lastUpdateTimestamp = timestamp;\n  }\n}\n_a = RAFTicker;\n/**\n * Alias for addListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.on = RAFTicker.addListener;\n/**\n * Alias for addListener\n *\n * @deprecated use addListener or on\n * @param type\n * @param listener\n */\nRAFTicker.addEventListener = RAFTicker.addListener;\n/**\n * Alias for hasListener\n *\n * @deprecated use hasListener\n * @param type\n * @param listener\n */\nRAFTicker.hasEventListener = RAFTicker.hasListener;\n/**\n * Alias for removeListener\n *\n * @param type\n * @param listener\n */\nRAFTicker.off = RAFTicker.removeListener;\n/**\n * Alias for removeListener\n *\n * @deprecated use removeListener or off\n * @param type\n * @param listener\n */\nRAFTicker.removeEventListener = RAFTicker.removeListener;\nRAFTicker.onTick = timestamp => {\n  _a.emitTickEvent(timestamp);\n  RAFTicker._id = requestAnimationFrame(RAFTicker.onTick);\n};\nRAFTicker.initialize();\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n;// CONCATENATED MODULE: ./demoSrc/demo.js\n\nclass Demo {\n  constructor() {\n    const types = Object.values(RAFTickerEventType);\n    types.forEach(type => {\n      RAFTicker.on(type, e => {\n        consoleEvent(type, e);\n      });\n    });\n  }\n}\nconst consoleEvent = (type, e) => {\n  console.log(`${type} : ${e.delta}, ${e.timestamp}`);\n};\nwindow.onload = () => {\n  const demo = new Demo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Qy9HTTs7O0FDQTJCO0FBRWhELE1BQU1nQyxJQUFJLENBQUM7RUFDaEJ0QyxXQUFXLEdBQUc7SUFDWixNQUFNdUMsS0FBSyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQzNDLGtCQUFrQixDQUFDO0lBQy9DeUMsS0FBSyxDQUFDRyxPQUFPLENBQUV0QixJQUFJLElBQUs7TUFDdEJmLFlBQVksQ0FBQ2UsSUFBSSxFQUFHdUIsQ0FBQyxJQUFLO1FBQ3hCQyxZQUFZLENBQUN4QixJQUFJLEVBQUV1QixDQUFDLENBQUM7TUFDdkIsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDO0VBQ0o7QUFDRjtBQUVBLE1BQU1DLFlBQVksR0FBRyxDQUFDeEIsSUFBSSxFQUFFdUIsQ0FBQyxLQUFLO0VBQ2hDRSxPQUFPLENBQUNDLEdBQUcsQ0FBRSxHQUFFMUIsSUFBSyxNQUFLdUIsQ0FBQyxDQUFDekMsS0FBTSxLQUFJeUMsQ0FBQyxDQUFDMUMsU0FBVSxFQUFDLENBQUM7QUFDckQsQ0FBQztBQUVEOEMsTUFBTSxDQUFDQyxNQUFNLEdBQUcsTUFBTTtFQUNwQixNQUFNQyxJQUFJLEdBQUcsSUFBSVgsSUFBSSxFQUFFO0FBQ3pCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWFzYXRvbWFraW5vL3JhZi10aWNrZXIvLi9lc20vUkFGVGlja2VyRXZlbnQuanM/NmQ2NCIsIndlYnBhY2s6Ly9AbWFzYXRvbWFraW5vL3JhZi10aWNrZXIvLi9lc20vUkFGVGlja2VyLmpzPzQ3OWQiLCJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby9yYWYtdGlja2VyLy4vZXNtL2luZGV4LmpzP2IyMzkiLCJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby9yYWYtdGlja2VyLy4vZGVtb1NyYy9kZW1vLmpzPzM5OTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBSQUZUaWNrZXJFdmVudFR5cGU7XG4oZnVuY3Rpb24gKFJBRlRpY2tlckV2ZW50VHlwZSkge1xuICAgIFJBRlRpY2tlckV2ZW50VHlwZVtcIm9uQmVmb3JlVGlja1wiXSA9IFwib25CZWZvcmVUaWNrXCI7XG4gICAgUkFGVGlja2VyRXZlbnRUeXBlW1widGlja1wiXSA9IFwidGlja1wiO1xuICAgIFJBRlRpY2tlckV2ZW50VHlwZVtcIm9uQWZ0ZXJUaWNrXCJdID0gXCJvbkFmdGVyVGlja1wiO1xufSkoUkFGVGlja2VyRXZlbnRUeXBlIHx8IChSQUZUaWNrZXJFdmVudFR5cGUgPSB7fSkpO1xuZXhwb3J0IGNsYXNzIFJBRlRpY2tlckV2ZW50IHtcbiAgICBjb25zdHJ1Y3Rvcih0aW1lc3RhbXAsIGRlbHRhKSB7XG4gICAgICAgIHRoaXMudGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgICAgICB0aGlzLmRlbHRhID0gZGVsdGE7XG4gICAgfVxufVxuIiwidmFyIF9hO1xuaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tIFwiZXZlbnRlbWl0dGVyM1wiO1xuaW1wb3J0IHsgUkFGVGlja2VyRXZlbnQsIFJBRlRpY2tlckV2ZW50VHlwZSB9IGZyb20gXCIuL1JBRlRpY2tlckV2ZW50XCI7XG5leHBvcnQgY2xhc3MgUkFGVGlja2VyIHtcbiAgICBzdGF0aWMgaW5pdGlhbGl6ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Rpc3BhdGNoZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5fZGlzcGF0Y2hlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXJ0KCk7XG4gICAgfVxuICAgIHN0YXRpYyByZXNldCgpIHtcbiAgICAgICAgdGhpcy5fZGlzcGF0Y2hlci5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICAgIHRoaXMuc3RhcnQoKTtcbiAgICB9XG4gICAgc3RhdGljIHN0YXJ0KCkge1xuICAgICAgICBpZiAoIVJBRlRpY2tlci5faWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBSQUZUaWNrZXIub25UaWNrKHBlcmZvcm1hbmNlLm5vdygpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgc3RvcCgpIHtcbiAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoUkFGVGlja2VyLl9pZCk7XG4gICAgICAgIHRoaXMuX2lkID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLl9sYXN0VXBkYXRlVGltZXN0YW1wID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBzdGF0aWMgYWRkTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5fZGlzcGF0Y2hlci5vbih0eXBlLCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGVcbiAgICAgKiBAcGFyYW0gbGlzdGVuZXJcbiAgICAgKi9cbiAgICBzdGF0aWMgaGFzTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5fZGlzcGF0Y2hlci5saXN0ZW5lcnModHlwZSk7XG4gICAgICAgIHJldHVybiBsaXN0ZW5lcnMuaW5jbHVkZXMobGlzdGVuZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIHRoZSBzcGVjaWZpZWQgbGlzdGVuZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlXG4gICAgICogQHBhcmFtIGxpc3RlbmVyXG4gICAgICovXG4gICAgc3RhdGljIHJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDjgqTjg5njg7Pjg4jjgpLnmbrlirnjgZnjgovjgIJcbiAgICAgKiDjgZPjga7plqLmlbDjga/jgqLjg5fjg6rjgrHjg7zjgrfjg6fjg7PjgYvjgonliKnnlKjjgZnjgovjgZPjgajjga/jgarjgY/jgIHkuLvjgavljZjkvZPjg4bjgrnjg4jjga7jgZ/jgoHjgavkvb/nlKjjgZnjgovjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlXG4gICAgICogQHBhcmFtIGV2ZW50XG4gICAgICovXG4gICAgc3RhdGljIGVtaXQodHlwZSwgZXZlbnQpIHtcbiAgICAgICAgdGhpcy5fZGlzcGF0Y2hlci5lbWl0KHR5cGUsIGV2ZW50KTtcbiAgICB9XG4gICAgc3RhdGljIGVtaXRUaWNrRXZlbnQodGltZXN0YW1wKSB7XG4gICAgICAgIGlmIChSQUZUaWNrZXIuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPT0gbnVsbCkge1xuICAgICAgICAgICAgUkFGVGlja2VyLl9sYXN0VXBkYXRlVGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRlbHRhID0gdGltZXN0YW1wIC0gUkFGVGlja2VyLl9sYXN0VXBkYXRlVGltZXN0YW1wO1xuICAgICAgICBSQUZUaWNrZXIuZW1pdChSQUZUaWNrZXJFdmVudFR5cGUub25CZWZvcmVUaWNrLCBuZXcgUkFGVGlja2VyRXZlbnQodGltZXN0YW1wLCBkZWx0YSkpO1xuICAgICAgICBSQUZUaWNrZXIuZW1pdChSQUZUaWNrZXJFdmVudFR5cGUudGljaywgbmV3IFJBRlRpY2tlckV2ZW50KHRpbWVzdGFtcCwgZGVsdGEpKTtcbiAgICAgICAgUkFGVGlja2VyLmVtaXQoUkFGVGlja2VyRXZlbnRUeXBlLm9uQWZ0ZXJUaWNrLCBuZXcgUkFGVGlja2VyRXZlbnQodGltZXN0YW1wLCBkZWx0YSkpO1xuICAgICAgICBSQUZUaWNrZXIuX2xhc3RVcGRhdGVUaW1lc3RhbXAgPSB0aW1lc3RhbXA7XG4gICAgfVxufVxuX2EgPSBSQUZUaWNrZXI7XG4vKipcbiAqIEFsaWFzIGZvciBhZGRMaXN0ZW5lclxuICpcbiAqIEBwYXJhbSB0eXBlXG4gKiBAcGFyYW0gbGlzdGVuZXJcbiAqL1xuUkFGVGlja2VyLm9uID0gUkFGVGlja2VyLmFkZExpc3RlbmVyO1xuLyoqXG4gKiBBbGlhcyBmb3IgYWRkTGlzdGVuZXJcbiAqXG4gKiBAZGVwcmVjYXRlZCB1c2UgYWRkTGlzdGVuZXIgb3Igb25cbiAqIEBwYXJhbSB0eXBlXG4gKiBAcGFyYW0gbGlzdGVuZXJcbiAqL1xuUkFGVGlja2VyLmFkZEV2ZW50TGlzdGVuZXIgPSBSQUZUaWNrZXIuYWRkTGlzdGVuZXI7XG4vKipcbiAqIEFsaWFzIGZvciBoYXNMaXN0ZW5lclxuICpcbiAqIEBkZXByZWNhdGVkIHVzZSBoYXNMaXN0ZW5lclxuICogQHBhcmFtIHR5cGVcbiAqIEBwYXJhbSBsaXN0ZW5lclxuICovXG5SQUZUaWNrZXIuaGFzRXZlbnRMaXN0ZW5lciA9IFJBRlRpY2tlci5oYXNMaXN0ZW5lcjtcbi8qKlxuICogQWxpYXMgZm9yIHJlbW92ZUxpc3RlbmVyXG4gKlxuICogQHBhcmFtIHR5cGVcbiAqIEBwYXJhbSBsaXN0ZW5lclxuICovXG5SQUZUaWNrZXIub2ZmID0gUkFGVGlja2VyLnJlbW92ZUxpc3RlbmVyO1xuLyoqXG4gKiBBbGlhcyBmb3IgcmVtb3ZlTGlzdGVuZXJcbiAqXG4gKiBAZGVwcmVjYXRlZCB1c2UgcmVtb3ZlTGlzdGVuZXIgb3Igb2ZmXG4gKiBAcGFyYW0gdHlwZVxuICogQHBhcmFtIGxpc3RlbmVyXG4gKi9cblJBRlRpY2tlci5yZW1vdmVFdmVudExpc3RlbmVyID0gUkFGVGlja2VyLnJlbW92ZUxpc3RlbmVyO1xuUkFGVGlja2VyLm9uVGljayA9ICh0aW1lc3RhbXApID0+IHtcbiAgICBfYS5lbWl0VGlja0V2ZW50KHRpbWVzdGFtcCk7XG4gICAgUkFGVGlja2VyLl9pZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShSQUZUaWNrZXIub25UaWNrKTtcbn07XG5SQUZUaWNrZXIuaW5pdGlhbGl6ZSgpO1xuIiwiZXhwb3J0ICogZnJvbSBcIi4vUkFGVGlja2VyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9SQUZUaWNrZXJFdmVudFwiO1xuIiwiaW1wb3J0IHsgUkFGVGlja2VyLCBSQUZUaWNrZXJFdmVudFR5cGUgfSBmcm9tIFwiLi4vZXNtXCI7XG5cbmV4cG9ydCBjbGFzcyBEZW1vIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgdHlwZXMgPSBPYmplY3QudmFsdWVzKFJBRlRpY2tlckV2ZW50VHlwZSk7XG4gICAgdHlwZXMuZm9yRWFjaCgodHlwZSkgPT4ge1xuICAgICAgUkFGVGlja2VyLm9uKHR5cGUsIChlKSA9PiB7XG4gICAgICAgIGNvbnNvbGVFdmVudCh0eXBlLCBlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IGNvbnNvbGVFdmVudCA9ICh0eXBlLCBlKSA9PiB7XG4gIGNvbnNvbGUubG9nKGAke3R5cGV9IDogJHtlLmRlbHRhfSwgJHtlLnRpbWVzdGFtcH1gKTtcbn07XG5cbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG4gIGNvbnN0IGRlbW8gPSBuZXcgRGVtbygpO1xufTtcbiJdLCJuYW1lcyI6WyJSQUZUaWNrZXJFdmVudFR5cGUiLCJSQUZUaWNrZXJFdmVudCIsImNvbnN0cnVjdG9yIiwidGltZXN0YW1wIiwiZGVsdGEiLCJfYSIsIkV2ZW50RW1pdHRlciIsIlJBRlRpY2tlciIsImluaXRpYWxpemUiLCJfZGlzcGF0Y2hlciIsInN0YXJ0IiwicmVzZXQiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJzdG9wIiwiX2lkIiwiX2xhc3RVcGRhdGVUaW1lc3RhbXAiLCJ1bmRlZmluZWQiLCJvblRpY2siLCJwZXJmb3JtYW5jZSIsIm5vdyIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiYWRkTGlzdGVuZXIiLCJ0eXBlIiwibGlzdGVuZXIiLCJvbiIsImhhc0xpc3RlbmVyIiwibGlzdGVuZXJzIiwiaW5jbHVkZXMiLCJyZW1vdmVMaXN0ZW5lciIsImVtaXQiLCJldmVudCIsImVtaXRUaWNrRXZlbnQiLCJvbkJlZm9yZVRpY2siLCJ0aWNrIiwib25BZnRlclRpY2siLCJhZGRFdmVudExpc3RlbmVyIiwiaGFzRXZlbnRMaXN0ZW5lciIsIm9mZiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJEZW1vIiwidHlwZXMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmb3JFYWNoIiwiZSIsImNvbnNvbGVFdmVudCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJvbmxvYWQiLCJkZW1vIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///318\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,e)=>{if(!U){var B=1/0;for(l=0;l<deferred.length;l++){for(var[U,F,e]=deferred[l],i=!0,t=0;t<U.length;t++)(!1&e||B>=e)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[t])))?U.splice(t--,1):(i=!1,e<B&&(B=e));if(i){deferred.splice(l--,1);var c=F();void 0!==c&&(Q=c)}}return Q}e=e||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>e;l--)deferred[l]=deferred[l-1];deferred[l]=[U,F,e]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),(()=>{var Q={577:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var e,B,[i,t,c]=F,l=0;if(i.some((U=>0!==Q[U]))){for(e in t)__webpack_require__.o(t,e)&&(__webpack_require__.m[e]=t[e]);if(c)var s=c(__webpack_require__)}for(U&&U(F);l<i.length;l++)B=i[l],__webpack_require__.o(Q,B)&&Q[B]&&Q[B][0](),Q[B]=0;return __webpack_require__.O(s)},F=self.webpackChunk_masatomakino_raf_ticker=self.webpackChunk_masatomakino_raf_ticker||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(318)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();